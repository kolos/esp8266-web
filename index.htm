<!doctype html>

<html lang="hu">
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
  <title>ESP8266</title>
  <style>
    :root {
      --keret: grey;
      --hatter: grey;
      --belso-hatter: #eee;
      --content-width: 95%;
    }
    
    @media (min-width: 768px) {
      :root {
        --content-width: 310px;
      }
    }
    
    * {
      box-sizing: border-box;
    }
    body{
      margin: 4px;
      font-family: "Segoe UI",Helvetica,Arial,sans-serif;
      font-size: 14px;
      line-height: 1.5;
      color: #444;
      background: var(--hatter);
    }
    #content{
      background: var(--belso-hatter);
      margin: auto;
      width: var(--content-width);
      border: 1px solid #888;
      border-radius: 3px;
      padding: 20px;
      box-shadow: 0px 0px 10px #888;
    }
    #teteje{
      border-bottom: 2px solid #888;
    }
    .tegla{
      border: 1px solid var(--keret);
      margin: 50px 0 50px 0;
      padding: 20px;
    }
    .tegla-fej {
      position: relative;
      top: -33px;
      background: var(--belso-hatter);
      padding: 0 5px 0 5px;
      color: var(--keret);
    }
    li{
      list-style: none;
    }
    .tegla-content {
      margin-top: -20px;
    }
    #alja{
      margin: auto;
      width: var(--content-width);
      margin-top: 30px;
      font-size: 10px;
      color: var(--belso-hatter);
    }
    hr{
      border: 1px dotted var(--keret);
    }
    #idojaras{
      float:right;
      margin: 18.76px 0;
    }
    #teteje>h1{
      display:inline-block;
    }
    #pins{
      display: grid;
      grid-template-columns: repeat(4, 25%);
    }
    .pin{
      font-size: 10px;
    }
    .pin>input{
      float: right;
    }
    #stats{
      display: inline-block;
    }
    #idojaras-also, #idojaras-update {
      font-size: 8px;
    }
    .napok td{
      text-align: center;
      font-size: 8px;
    }
    
    .centered {
      text-align: center;
    }
    
    .hidden {
      display: none;
    }
  </style>

</head>

<body>
  <div id="content">
    <div id="teteje">
      <h1>Kapcsoló</h1>
      <span id="idojaras">
        <div id="idojaras-stat">##</div>
        <div id="idojaras-also">frissítve: <span id="idojaras-update">##</span></div>
      </span>
    </div>
    <div id="kozepe">
      <div class="tegla">
        <span class="tegla-fej">LED</span>
        <div class="tegla-content">
          <li>Átvált: <button type="button" data-id="led">KATT.</button>
        </div>
      </div>
      <div class="tegla">
        <span class="tegla-fej">Kapu nyitás</span>
        <div class="tegla-content">
          <li>Autó (2 szárny): <button type="button" data-id="kapu-auto">KATT.</button>
          <li>Gyalogos (1 szárny): <button type="button" data-id="kapu-gyalog">KATT.</button>
        </div>
      </div>
      <div class="tegla">
        <span class="tegla-fej">Távirányító</span>
        <div class="tegla-content">
          <table style="width: 100%;">
            <tr>
              <td>Lámpa</td>
              <td>
                <button type="button" data-id="lampa-on">Bekapcs</button>
              </td>
              <td>
                <button type="button" data-id="lampa-off">Kikapcs</button>
              </td>
            </tr>
          </table>
        </div>
      </div>
      <div class="tegla">
        <span class="tegla-fej">Relék</span>
        <div class="tegla-content">
          <table style="width: 100%;">
            <tr>
              <td>Relay1</td>
              <td>
                <button type="button" data-id="relay1-on">Bekapcs</button>
              </td>
              <td>
                <button type="button" data-id="relay1-off">Kikapcs</button>
              </td>
            </tr>
            <tr>
              <td>Relay2</td>
              <td>
                <button type="button" data-id="relay2-on">Bekapcs</button>
              </td>
              <td>
                <button type="button" data-id="relay2-off">Kikapcs</button>
              </td>
            </tr>
          </table>
          </div>
      </div>
      <div class="tegla">
        <span class="tegla-fej">WoL packet</span>
        <div class="tegla-content">
          <li>Küldés: <button type="button" data-id="wakeup">KATT.</button>
        </div>
      </div>
      <div class="tegla">
        <span class="tegla-fej">Időzítő</span>
        <div class="tegla-content">
          <table>
            <tr>
              <td>Napok:</td>
              <td>
                <table width="100%">
                  <tr class="napok">
                    <td>Hé</td>
                    <td>Ke</td>
                    <td>Sze</td>
                    <td>Cs</td>
                    <td>Pé</td>
                    <td>Szo</td>
                    <td>Va</td>
                  </tr>
                  <tr>
                    <td><input type="checkbox" id="napok2" checked></td>
                    <td><input type="checkbox" id="napok3" checked></td>
                    <td><input type="checkbox" id="napok4" checked></td>
                    <td><input type="checkbox" id="napok5" checked></td>
                    <td><input type="checkbox" id="napok6" checked></td>
                    <td><input type="checkbox" id="napok7" checked></td>
                    <td><input type="checkbox" id="napok1" checked></td>
                  </tr>
                </table>
              </td>
            </tr>
            <tr>
              <td>Idő:</td>
              <td>
                <input id="timer.start_hour" value="12" style="width: 50px" min=0 max=23 type="number">
                :
                <input id="timer.start_minute" value="0" style="width: 50px" min=0 max=59 type="number">
              </td>
            </tr>
            <tr>
              <td>Időtartam:</td>
              <td>
                <input id="timer.operating_minutes" value="30" style="width: 50px" min=1 type="number"> perc
              </td>
            </tr>
            <tr>
              <td>Pin:</td>
              <td>
                <select id="timer.pin">
                  <option value="2">D4 - LED</option>
                  <option value="14">D5 - Relay1</option>
                  <option value="12">D6 - Relay2</option>
                </select>
              </td>
            </tr>
            <tr>
              <td colspan=2 align=center>
                <button type="button" data-id="scheduler">Save</button>
                <button type="button" data-id="scheduler_reset">Reset</button>
                <button type="button" data-id="scheduler_store">Store</button>
              <td>
            </tr>
          </table>          
          <div id="timer_table"></div>
        </div>
      </div>
      <div class="tegla">
        <span class="tegla-fej">Upload</span>
        <div class="tegla-content">
          <form method="post" enctype="multipart/form-data" action="/upload_file">
              <input type="file" name="name">
              <input type="submit">
          </form>
        </div>
      </div>
      <div class="tegla">
        <span class="tegla-fej">STATUS</span>
        <div class="tegla-content">
          <div id="pins">
            <span class="pin">
              Pin 0: <input type="checkbox" id="pin0" disabled>
            </span>
            <span class="pin">
              Pin 1: <input type="checkbox" id="pin1" disabled>
            </span>
            <span class="pin">
              Pin 2: <input type="checkbox" id="pin2" disabled>
            </span>
            <span class="pin">
              Pin 3: <input type="checkbox" id="pin3" disabled>
            </span>
            <span class="pin">
              Pin 4: <input type="checkbox" id="pin4" disabled>
            </span>
            <span class="pin">
              Pin 5: <input type="checkbox" id="pin5" disabled>
            </span>
            <span class="pin">
              Pin 9: <input type="checkbox" id="pin9" disabled>
            </span>
            <span class="pin">
              Pin 10: <input type="checkbox" id="pin10" disabled>
            </span>
            <span class="pin">
              Pin 12: <input type="checkbox" id="pin12" disabled>
            </span>
            <span class="pin">
              Pin 13: <input type="checkbox" id="pin13" disabled>
            </span>
            <span class="pin">
              Pin 14: <input type="checkbox" id="pin14" disabled>
            </span>
            <span class="pin">
              Pin 15: <input type="checkbox" id="pin15" disabled>
            </span>
            <span class="pin">
              Pin 16: <input type="checkbox" id="pin16" disabled>
            </span>            
          </div>
        </div>
      </div>
    </div>
  </div>
  <div id="alja">
    <div id="stats">
      <li>Szerver idő: <span id="ido">##</span> | Hőmérséklet: <span id="belso_hom">##</span>°C
      <li>Wifi: <span id="wifi">##</span> - <span id="wifi_ssid">##</span>
      <li>Uptime: <span id="uptime">##</span> | VCC: <span id="vcc">##</span>V | Heap: <span id="heap">##</span> B
    </div>
    <button type="button" data-id="info" style="float: right">KATT.</button>
  </div>
  
  <script>
  
    var ajaxReq = function(method, url, data, callback) {
      var server_url = window.location.hostname ? "" : "http://kapcsolo/";
      
      var request = new XMLHttpRequest();
      request.open(method, server_url + url, true);
      request.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded; charset=UTF-8');
      request.onreadystatechange = function() {
          if(request.readyState == XMLHttpRequest.DONE && request.status == 200 && typeof callback === "function") {
              callback(request.response);
          }
      }
      
      if(data) {
        var params = new URLSearchParams(data);
        request.send(params.toString());
      } else {
        request.send();
      }
    }


    var enableButton = function(button) {
      button.disabled = false;
    }

    var buttonClickedEvent = function(e) {
      var buttonElement = this;
      var id = buttonElement.dataset.id;
      
      if(! id) {
        return;
      }

      buttonElement.disabled = true;      
      setTimeout(function(){ enableButton(buttonElement); }, 2000);

      switch(id) {
        case "info":
          updatePinStates();
          break;
        case "scheduler":
          if(getDayOfWeekByte() == 0) break;

          var tmpDate = new Date();
          tmpDate.setHours(getValFromId("timer.start_hour"));
          tmpDate.setMinutes(getValFromId("timer.start_minute"));
          
          var data = {
            "day_of_week": getDayOfWeekByte(),
            "start_hour": tmpDate.getUTCHours(),
            "start_minute": tmpDate.getUTCMinutes(),
            "operating_minutes": getValFromId("timer.operating_minutes"),
            "pin": getValFromId("timer.pin"),
          };
          ajaxReq("POST", "scheduler", data, function(d) {
            updatePinStates();
          });
          break;
        case "scheduler_reset":
          ajaxReq("POST", "scheduler_reset", data, function(d) {
            updatePinStates();
          });
          break;
        default:
          ajaxReq("POST", id, null, function(d) {
            console.log(d);
          });
      }
    }


    var elements = document.getElementsByTagName('button');
    for(var i = 0, len = elements.length; i < len; i++) {
        elements[i].onclick = buttonClickedEvent;
    }
    
    var getDayOfWeekByte = function() {
      var tmp = 0;
      for(var i=1; i<= 7; i++) {
        tmp |= getCheckedValueElementId("napok" + i) << i;
      }
      
      return tmp;
    }
    var getDayStringFromDayOfWeekByte = function(_byte) {
      if(_byte == 254) return "Mind";
      var tmp = [];
      var days = {
        "Hé": 2,
        "Ke": 3,
        "Sze": 4,
        "Cs": 5,
        "Pé": 6,
        "Szo": 7,
        "Va": 1
      };
      
      Object.keys(days).forEach(function(d) {
        if((_byte & (1 << days[d])) != 0) {
          tmp.push(d);
        }
      });
      
      return tmp.join(", ");
    }
    
    var getDateStringFromTimeSeconds = function(timestamp) {
      var ido = new Date(1000 * timestamp);        
      return ido.getFullYear() + "-" + ("0"+(ido.getMonth()+1)).slice(-2) + "-" + ("0" + ido.getDate()).slice(-2) + " " + ("0" + ido.getHours()).slice(-2) + ":" + ("0" + ido.getMinutes()).slice(-2) + ":" + ("0" + ido.getSeconds()).slice(-2);
    }
    
    var getValFromId = function(element_id) {
      var element = document.getElementById(element_id);

      return element.value;
    }
    
    var getCheckedValueElementId = function(element_id) {
      return document.getElementById(element_id).checked ? 1 : 0;
    }
    
    var getUptimeStringFromSeconds = function(seconds) {
      var day, hour, minute;

      minute = Math.floor(seconds / 60);
      seconds = seconds % 60;
      hour = Math.floor(minute / 60);
      minute = minute % 60;
      day = Math.floor(hour / 24);
      hour = hour % 24;
      
      return day + "d" + hour + "h" + minute + "m" + seconds + "s";
    }
    
    var getWifiPercentageStringFromRssi = function(rssi) {
      return (2 * (rssi + 100)) + " %";
    }
    
    var getWeatherStatusString = function(homerseklet, eso_1ora, eso_ma) {
      return homerseklet + "°C, eső: " + eso_ma + "mm";
    }
    
    var getVccFromData = function(vcc) {
      return (vcc / 1024).toFixed(2);
    }
    
    var getHeapFromData = function(heap) {
      return heap;
    }
    
    var updatePinStates  = function() {
      ajaxReq("GET", "info", null, function(d) {
        var data = JSON.parse(d);
        
        for(var i = 0; i<16; i++) {
          var pinVal = !((data.pins >> i) & 1);
          
          var checkboxElement = document.getElementById("pin" + i);
          if(checkboxElement) {
            checkboxElement.checked = pinVal;
          }
        }
        
        var timer_table = "<table width=\"100%\"><tr><th>Napok</th><th>Kezd</th><th>Tartam</th><th>Pin</th></tr>";
        data.timers.filter(function(d) { return d;}).forEach(function(timer) {
          var tmpDate = new Date();
          tmpDate.setUTCHours(timer.start_hour);
          tmpDate.setUTCMinutes(timer.start_minute);
          
          timer_table += "<tr>";
          timer_table += "<td class=\"centered\" style=\"font-size: 12px\">" + getDayStringFromDayOfWeekByte(timer.day_of_week) + "</td>";
          timer_table += "<td class=\"centered\">" + ("0" + tmpDate.getHours()).slice(-2) + ":" + ("0" + tmpDate.getMinutes()).slice(-2) + "</td>";
          timer_table += "<td class=\"centered\">" + timer.operating_minutes + "<span style=\"font-size: 10px\">perc</span></td>";
          timer_table += "<td class=\"centered\">" + getPinName(timer.pin) + "</td>";
          //timer_table += "<td>" + (timer.enabled ? "✔️" : "❌") + "</td>";
          timer_table += "</tr>";
        });
        timer_table += "</table>";
        document.getElementById("timer_table").innerHTML = timer_table;
        
        
        document.getElementById("idojaras-stat").innerHTML = getWeatherStatusString(data.hom, data.eso_1ora, data.eso_ma);
        document.getElementById("idojaras-update").innerHTML = getDateStringFromTimeSeconds(data.weather_updated);
        
        
        document.getElementById("ido").innerHTML = getDateStringFromTimeSeconds(data.time);
        document.getElementById("uptime").innerHTML = getUptimeStringFromSeconds(data.uptime);
        document.getElementById("wifi").innerHTML = getWifiPercentageStringFromRssi(data.wifi);
        document.getElementById("wifi_ssid").innerHTML = data.wifi_ssid;
        document.getElementById("belso_hom").innerHTML = data.belso_hom;
        document.getElementById("vcc").innerHTML = getVccFromData(data.vcc);
        document.getElementById("heap").innerHTML = getHeapFromData(data.heap);
      });
    }

    var pin_names = {
      16: "D0",
      5: "D1",
      4: "D2",
      0: "D3",
      2: "D4",
      14: "D5",
      12: "D6",
      13: "D7",
      15: "D8",
      3: "D9",
      1: "D10",
    };
    
    function getPinName(pin) {
      return pin_names[pin];
    }
    
    window.onload = function() {
      updatePinStates();
    }
  </script>
</body>
</html>